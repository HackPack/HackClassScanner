#! /usr/bin/env hhvm
<?hh
if(substr(php_sapi_name(), 0, 3) !== 'cli'){
    http_response_code(404);
    die();
}

// Find the composer autoloader
$thisdir = __DIR__;

do {
    if(file_exists($thisdir . '/autoload.php')) {
        require_once($thisdir . '/autoload.php');
        break;
    }
    if(file_exists($thisdir . '/vendor/autoload.php')) {
        require_once($thisdir . '/vendor/autoload.php');
        break;
    }
    $thisdir = dirname($thisdir);
    if($thisdir === '/'){
        die('You need to set up the project dependencies using the following commands:' . PHP_EOL .
            'curl -s http://getcomposer.org/installer | php' . PHP_EOL .
            'php composer.phar install' . PHP_EOL);
    }
} while(true);


use kilahm\Scanner\ClassScanner;
use kilahm\Clio\Clio;
use kilahm\Clio\Output\CliFormat;
use kilahm\Clio\Enum\ForegroundCode;

$clio = Clio::fromCli();

$clio->arg('path')->describedAs('Base path to scan.');
$excludeOpt = $clio->opt('exclude')->aka('e')->aka('excludes')->aka('skip')
    ->withManyValues(Vector{})
    ->describedAs('Space delimited list of directories to skip');
$colorOpt = $clio->opt('with-colors')->aka('c');

$scanner = new ClassScanner($clio->getArgVals()->toSet(), $excludeOpt->getValueList()->toSet());

$showColors = $colorOpt->wasPresent();
$map = $scanner->mapClassToFile();

$classLen = 0;
foreach($map as $class => $file) {
    $classLen = max($classLen, strlen($class));
}

foreach($scanner->mapClassToFile() as $class => $path) {
    $class = str_pad($class, $classLen, ' ', STR_PAD_RIGHT);
    if($showColors){
        $class = $clio->format($class)->fg(ForegroundCode::blue);
        $path = $clio->format($path)->fg(ForegroundCode::yellow);
    }
    echo "$class => $path" . PHP_EOL;
}
